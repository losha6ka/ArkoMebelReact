import { collection, doc, setDoc } from "firebase/firestore";
import { db } from "./firebase";

const ADMIN_UID = "ZDJOcDWvoJPiGo2TwJRmpf7IHsN2";

/** –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ ‚Äî —ç—Ç–æ –æ–±—ã—á–Ω—ã–π –æ–±—ä–µ–∫—Ç (–Ω–µ –º–∞—Å—Å–∏–≤, –Ω–µ null) */
const isPlainObject = (v: any) =>
    typeof v === "object" && v !== null && !Array.isArray(v);

/** –ú–∞—Å—Å–∏–≤ —Å–æ—Å—Ç–æ–∏—Ç —Ç–æ–ª—å–∫–æ –∏–∑ —Å—Ç—Ä–æ–∫? */
const isArrayOfStrings = (arr: any[]) =>
    Array.isArray(arr) && arr.every((i) => typeof i === "string");

/** –ú–∞—Å—Å–∏–≤ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –æ–±—ä–µ–∫—Ç–æ–≤? */
const isArrayOfObjects = (arr: any[]) =>
    Array.isArray(arr) && arr.every((i) => isPlainObject(i));

/**
 * –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –ø—Ä–æ—Ö–æ–¥–∏—Ç –æ–±—ä–µ–∫—Ç —Ç–æ–≤–∞—Ä–∞ –∏ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç –Ω–∞–ª–∏—á–∏–µ id
 * —Ç–æ–ª—å–∫–æ –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤-–º–æ–¥–µ–ª—å–Ω—ã—Ö —Å—É—â–Ω–æ—Å—Ç–µ–π (–æ–±—ä–µ–∫—Ç—ã –≤ –º–∞—Å—Å–∏–≤–∞—Ö).
 *
 * –ü—Ä–∞–≤–∏–ª–∞:
 * - –ï—Å–ª–∏ –ø–æ–ª–µ ‚Äî –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫ (images) ‚Üí –Ω–µ —Ç—Ä–æ–≥–∞–µ–º.
 * - –ï—Å–ª–∏ –ø–æ–ª–µ ‚Äî –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ ‚Üí –¥–æ–±–∞–≤–ª—è–µ–º id –∫–∞–∂–¥–æ–º—É –æ–±—ä–µ–∫—Ç—É (–µ—Å–ª–∏ –µ—â—ë –Ω–µ—Ç) –∏ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ –ø—Ä–æ—Ö–æ–¥–∏–º –µ–≥–æ.
 * - –ï—Å–ª–∏ –ø–æ–ª–µ ‚Äî –æ–±—ä–µ–∫—Ç (–Ω–µ –º–∞—Å—Å–∏–≤) ‚Üí —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ –ø—Ä–æ—Ö–æ–¥–∏–º –µ–≥–æ (–Ω–æ –Ω–µ –¥–æ–±–∞–≤–ª—è–µ–º id –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏).
 * - –ù–ï –¥–æ–±–∞–≤–ª—è–µ–º id –∫ –ø—Ä–æ—Å—Ç—ã–º –ø–æ–ª—è–º (string/number/boolean).
 */
function ensureChildIds(obj: any): any {
    if (!isPlainObject(obj)) return obj;

    const res: any = { ...obj };

    for (const key of Object.keys(res)) {
        const val = res[key];

        if (Array.isArray(val)) {
            if (isArrayOfStrings(val)) {
                // –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫, –Ω–∞–ø—Ä–∏–º–µ—Ä images
                res[key] = val;
            } else if (isArrayOfObjects(val)) {
                // –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ ‚Äî –Ω—É–∂–¥–∞–µ–º—Å—è –≤ id –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
                res[key] = val.map((item: any) => {
                    const newItem = { ...(isPlainObject(item) ? item : {}) };
                    if (!newItem.id) newItem.id = crypto.randomUUID();
                    // —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–µ–º –≤–ª–æ–∂–µ–Ω–Ω—ã–µ –ø–æ–ª—è –≤–Ω—É—Ç—Ä–∏ —ç—Ç–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
                    return ensureChildIds(newItem);
                });
            } else {
                // —Å–º–µ—à–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ ‚Äî —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –ø–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
                res[key] = val.map((it: any) =>
                    isPlainObject(it) ? ensureChildIds(it) : it
                );
            }
        } else if (isPlainObject(val)) {
            // –æ–±—ä–µ–∫—Ç ‚Äî –ø—Ä–æ—Å—Ç–æ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–µ–º
            res[key] = ensureChildIds(val);
        } else {
            // –ø—Ä–æ—Å—Ç–æ–µ –ø–æ–ª–µ (string/number/boolean/null/undefined)
            res[key] = val;
        }
    }

    return res;
}

/**
 * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –æ–¥–∏–Ω —Ç–æ–≤–∞—Ä –≤ Firestore.
 * - productRoot.id –±—É–¥–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∏ –∑–∞–ø–∏—Å–∞–Ω
 * - slug –±—É–¥–µ—Ç –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω/—É–¥–∞–ª–µ–Ω
 */
export const uploadProduct = async (userId: string, product: any) => {
    if (userId !== ADMIN_UID) {
        console.error("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É —Ç–æ–≤–∞—Ä–æ–≤");
        return;
    }

    try {
        // —Å–æ–∑–¥–∞—ë–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π id –¥–ª—è —Ç–æ–≤–∞—Ä–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞–∫ –¥–æ–∫—É–º–µ–Ω—Ç id –∏ –∫–∞–∫ –ø–æ–ª–µ id –≤ –æ–±—ä–µ–∫—Ç–µ)
        const productId = crypto.randomUUID();

        // –ö–æ–ø–∏—Ä—É–µ–º –ø—Ä–æ–¥—É–∫—Ç —á—Ç–æ–±—ã –Ω–µ –º—É—Ç–∏—Ä–æ–≤–∞—Ç—å –∏—Å—Ö–æ–¥–Ω–∏–∫
        const pCopy = { ...product };

        // –£–¥–∞–ª—è–µ–º slug –µ—Å–ª–∏ –µ—Å—Ç—å (—Ç—ã –ø–æ–ø—Ä–æ—Å–∏–ª —É–±—Ä–∞—Ç—å)
        if ("slug" in pCopy) delete pCopy.slug;

        // –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ–º id –¥–ª—è –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö —Å—É—â–Ω–æ—Å—Ç–µ–π (modules, tables, delivery, product.colors –∏ —Ç.–¥.)
        const productWithChildIds = ensureChildIds(pCopy);

        // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º id –∫–æ—Ä–Ω–µ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
        productWithChildIds.id = productId;

        // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ –¥–ª—è –ø–æ–∏—Å–∫–æ–≤–æ–π —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
        productWithChildIds.nameLowercase = (productWithChildIds.name || "").toLowerCase();

        // –°–æ–∑–¥–∞—ë–º –¥–æ–∫—É–º–µ–Ω—Ç —Å id = productId
        const productRef = doc(collection(db, "products"), productId);
        await setDoc(productRef, productWithChildIds, { merge: true });

        console.log(`‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω —Ç–æ–≤–∞—Ä: ${productWithChildIds.name} (id=${productId})`);
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ:", error);
    }
};

/**
 * –ú–∞—Å—Å–æ–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞
 */
export const uploadAllProducts = async (userId: string, products: any[]) => {
    if (!Array.isArray(products)) {
        console.error("‚ùå products –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –º–∞—Å—Å–∏–≤–æ–º");
        return;
    }

    for (const product of products) {
        await uploadProduct(userId, product);
    }

    console.log("üéâ –í—Å–µ —Ç–æ–≤–∞—Ä—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã");
};
