import { collection, doc, setDoc } from "firebase/firestore";
import { db } from "./firebase";

// –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–≤–æ–∏ —Ç–æ–≤–∞—Ä—ã –∏–∑ mock (–º–æ–∂–Ω–æ –≤—Å—Ç–∞–≤–∏—Ç—å –ø—Ä—è–º–æ JSON)

const ADMIN_UID = "ZDJOcDWvoJPiGo2TwJRmpf7IHsN2"; // —Ç–≤–æ–π UID –∏–∑ –ø—Ä–∞–≤–∏–ª
interface Product {
    image: string,
    name: string,
    price: string | number,
    oldPrice?: string | number,
    hit?: boolean,
    discount?: string,
    stars?: number,
    characteristics: any[],
    delivery: any[],
    description: string[],
    material: any[],
    module: any[]

}
// üöÄ –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤
export const uploadProducts = async (userId: string, product: any) => {
    if (userId !== ADMIN_UID) {
        console.error("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É —Ç–æ–≤–∞—Ä–æ–≤");
        return;
    }

    try {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º setDoc –≤–º–µ—Å—Ç–æ addDoc, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
        const ref = doc(collection(db, "products"), crypto.randomUUID());
        await setDoc(ref, { ...product, nameLowercase: product.name.toLowerCase() }, { merge: true });
        console.log(`‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω —Ç–æ–≤–∞—Ä: ${product.name}`);


        console.log("üéâ –í—Å–µ —Ç–æ–≤–∞—Ä—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã");
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ:", error);
    }
};
